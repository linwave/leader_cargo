# Generated by Django 3.2.20 on 2023-09-14 16:57

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yuan', models.FloatField(null=True, verbose_name='Курс ¥')),
                ('dollar', models.FloatField(null=True, verbose_name='Курс $')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Курсы валют',
                'verbose_name_plural': 'Курсы валют',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название товара')),
                ('link_url', models.CharField(max_length=50, verbose_name='Ссылка на товар')),
                ('product_description', models.CharField(max_length=50, verbose_name='Описание товара')),
                ('price_rmb', models.FloatField(null=True, verbose_name='Цена товара в Китае в юанях')),
                ('quantity', models.FloatField(null=True, verbose_name='Количество')),
                ('price_delivery', models.FloatField(null=True, verbose_name='Стоимость доставки')),
                ('price_purchase', models.FloatField(blank=True, null=True, verbose_name='Закупочная цена')),
                ('price_site', models.FloatField(blank=True, null=True, verbose_name='Цена на сайте')),
                ('price_delivery_real', models.FloatField(blank=True, null=True, verbose_name='Стоимость доставки реальная')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Список товаров',
                'verbose_name_plural': 'Список товаров',
            },
        ),
        migrations.CreateModel(
            name='Appeals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.IntegerField(blank=True, verbose_name='ID клиента')),
                ('manager', models.IntegerField(blank=True, verbose_name='ID менеджера')),
                ('buyer', models.IntegerField(blank=True, verbose_name='ID закупщика')),
                ('tag', models.CharField(max_length=50, verbose_name='Тег заявки')),
                ('status', models.CharField(max_length=50, verbose_name='Статус заявки')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.goods')),
            ],
            options={
                'verbose_name': 'Список заявок',
                'verbose_name_plural': 'Список заявок',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя/ФИО')),
                ('phone', models.CharField(max_length=50, unique=True, verbose_name='Телефон')),
                ('role', models.CharField(choices=[('Супер Администратор', 'Супер Администратор'), ('Администратор', 'Администратор'), ('Менеджер', 'Менеджер'), ('Закупщик', 'Закупщик'), ('Клиент', 'Клиент')], default='Менеджер', max_length=50, verbose_name='Роль')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('town', models.CharField(choices=[('Москва', 'Москва'), ('Краснодар', 'Краснодар')], default='Москва', max_length=50, verbose_name='Город')),
                ('description', models.CharField(blank=True, max_length=240, verbose_name='Описание')),
                ('manager', models.IntegerField(blank=True, null=True, verbose_name='Менеджер')),
                ('pass_no_sha', models.CharField(blank=True, max_length=200, verbose_name='Доп.пароль')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('status', models.BooleanField(choices=[(True, 'Активен'), (False, 'Заблокирован')], default=True, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['role', '-time_create'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
